// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportData.Data;

#nullable disable

namespace SportData.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SportData.Models.Administrateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdresseCourriel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("adressecourriel");

                    b.Property<int>("IdOrganisation")
                        .HasColumnType("int")
                        .HasColumnName("idorganisation");

                    b.Property<string>("Identifiant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("identifiant");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("motdepasse");

                    b.HasKey("Id");

                    b.HasIndex("IdOrganisation");

                    b.ToTable("administrateur");
                });

            modelBuilder.Entity("SportData.Models.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdSport")
                        .HasColumnType("int")
                        .HasColumnName("idsport");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nom");

                    b.HasKey("Id");

                    b.HasIndex("IdSport");

                    b.ToTable("coach");
                });

            modelBuilder.Entity("SportData.Models.Employe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdresseCourriel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("adressecourriel");

                    b.Property<int>("IdOrganisation")
                        .HasColumnType("int")
                        .HasColumnName("idorganisation");

                    b.Property<string>("MotDePasse")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("motdepasse");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nom");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prenom");

                    b.Property<bool>("Validation")
                        .HasColumnType("bit")
                        .HasColumnName("validation");

                    b.HasKey("Id");

                    b.HasIndex("IdOrganisation");

                    b.ToTable("employe");
                });

            modelBuilder.Entity("SportData.Models.Evenement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2")
                        .HasColumnName("datedebut");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2")
                        .HasColumnName("datefin");

                    b.Property<int>("IdOrganisation")
                        .HasColumnType("int")
                        .HasColumnName("idorganisation");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("libelle");

                    b.HasKey("Id");

                    b.HasIndex("IdOrganisation");

                    b.ToTable("evenement");
                });

            modelBuilder.Entity("SportData.Models.Organisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nom");

                    b.HasKey("Id");

                    b.ToTable("organisation");
                });

            modelBuilder.Entity("SportData.Models.SpecificiteEvenement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2")
                        .HasColumnName("datedebut");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2")
                        .HasColumnName("datefin");

                    b.Property<int>("IdEvenement")
                        .HasColumnType("int")
                        .HasColumnName("idevenement");

                    b.Property<int>("IdSport")
                        .HasColumnType("int")
                        .HasColumnName("idsport");

                    b.Property<int>("NombrePlace")
                        .HasColumnType("int")
                        .HasColumnName("nombreplace");

                    b.HasKey("Id");

                    b.HasIndex("IdEvenement");

                    b.HasIndex("IdSport");

                    b.ToTable("specificiteevenement");
                });

            modelBuilder.Entity("SportData.Models.Sport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nom");

                    b.HasKey("Id");

                    b.ToTable("sport");
                });

            modelBuilder.Entity("SportData.Models.Administrateur", b =>
                {
                    b.HasOne("SportData.Models.Organisation", "Organisation")
                        .WithMany()
                        .HasForeignKey("IdOrganisation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organisation");
                });

            modelBuilder.Entity("SportData.Models.Coach", b =>
                {
                    b.HasOne("SportData.Models.Sport", "Sport")
                        .WithMany()
                        .HasForeignKey("IdSport")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("SportData.Models.Employe", b =>
                {
                    b.HasOne("SportData.Models.Organisation", "Organisation")
                        .WithMany()
                        .HasForeignKey("IdOrganisation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organisation");
                });

            modelBuilder.Entity("SportData.Models.Evenement", b =>
                {
                    b.HasOne("SportData.Models.Organisation", "Organisation")
                        .WithMany()
                        .HasForeignKey("IdOrganisation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organisation");
                });

            modelBuilder.Entity("SportData.Models.SpecificiteEvenement", b =>
                {
                    b.HasOne("SportData.Models.Evenement", "Evenement")
                        .WithMany()
                        .HasForeignKey("IdEvenement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportData.Models.Sport", "Sport")
                        .WithMany()
                        .HasForeignKey("IdSport")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evenement");

                    b.Navigation("Sport");
                });
#pragma warning restore 612, 618
        }
    }
}
